<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Academic</title>
    <link>https://artyombabenko.github.io/ru/</link>
      <atom:link href="https://artyombabenko.github.io/ru/index.xml" rel="self" type="application/rss+xml" />
    <description>Academic</description>
    <generator>Wowchemy (https://wowchemy.com)</generator><language>ru-ru</language><lastBuildDate>Sat, 01 Jun 2030 13:00:00 +0000</lastBuildDate>
    <image>
      <url>https://artyombabenko.github.io/media/icon_hu0b7a4cb9992c9ac0e91bd28ffd38dd00_9727_512x512_fill_lanczos_center_3.png</url>
      <title>Academic</title>
      <link>https://artyombabenko.github.io/ru/</link>
    </image>
    
    <item>
      <title>Example Talk</title>
      <link>https://artyombabenko.github.io/ru/talk/example-talk/</link>
      <pubDate>Sat, 01 Jun 2030 13:00:00 +0000</pubDate>
      <guid>https://artyombabenko.github.io/ru/talk/example-talk/</guid>
      <description>&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    Click on the &lt;strong&gt;Slides&lt;/strong&gt; button above to view the built-in slides feature.
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Slides can be added in a few ways:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Create&lt;/strong&gt; slides using Wowchemy&amp;rsquo;s &lt;a href=&#34;https://wowchemy.com/docs/managing-content/#create-slides&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;em&gt;Slides&lt;/em&gt;&lt;/a&gt; feature and link using &lt;code&gt;slides&lt;/code&gt; parameter in the front matter of the talk file&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Upload&lt;/strong&gt; an existing slide deck to &lt;code&gt;static/&lt;/code&gt; and link using &lt;code&gt;url_slides&lt;/code&gt; parameter in the front matter of the talk file&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Embed&lt;/strong&gt; your slides (e.g. Google Slides) or presentation video on this page using &lt;a href=&#34;https://wowchemy.com/docs/writing-markdown-latex/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;shortcodes&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Further event details, including &lt;a href=&#34;https://wowchemy.com/docs/writing-markdown-latex/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;page elements&lt;/a&gt; such as image galleries, can be added to the body of this page.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Upstart</title>
      <link>https://artyombabenko.github.io/ru/post/upstart/</link>
      <pubDate>Sat, 04 Jun 2022 14:35:38 +0300</pubDate>
      <guid>https://artyombabenko.github.io/ru/post/upstart/</guid>
      <description>&lt;h1 id=&#34;upstart---это-система-инициализации-ос-которая-контролирует-запуск-демонов-во-время-загрузки-системы-их-остановку-и-управление-ими-во-время-работы-системы-это-основанная-на-событиях-замена-системы-инициализации-init-в-системах-unix-и-linux-первоначально-он-был-разработан-для-дистрибутива-ubuntu-но-позже-стал-использоваться-в-других-дистрибутивах-linux-таких-как-fedora-позже-заменен-systemd-как-замена-unix-system-v-init-с-2014-года-upstart-находится-только-в-режиме-обслуживания-без-разработки-новых-функций-сейчас-он-признан-устаревшим-и-во-многих-дистрибутивах-планируется-переход-на-systemd&#34;&gt;Upstart - это система инициализации ОС, которая контролирует запуск демонов во время загрузки системы, их остановку и управление ими во время работы системы. Это основанная на событиях замена системы инициализации init в системах UNIX и Linux. Первоначально он был разработан для дистрибутива Ubuntu, но позже стал использоваться в других дистрибутивах Linux, таких как Fedora (позже заменен systemd), как замена UNIX System V init. С 2014 года Upstart находится только в режиме обслуживания, без разработки новых функций. Сейчас он признан устаревшим, и во многих дистрибутивах планируется переход на systemd.&lt;/h1&gt;
&lt;h1 id=&#34;upstart---это-гибридная-система-инициализации-она-использует-как-стартовые-скрипты-sysv-так-и-служебные-файлы-systemd&#34;&gt;UpStart - это гибридная система инициализации, она использует как стартовые скрипты SysV, так и служебные файлы Systemd.&lt;/h1&gt;
&lt;h1 id=&#34;большинство-ее-возможностей-работает-благодаря-интеграции-с-системой-инициализации-systemd-в-последнее-время-все-меньше-и-меньше-используется-sysv-init-scripts-и-все-больше-и-больше-systemd-unit-files-рано-или-поздно-systemd-вытеснит-и-полностью-заменит-upstart-в-ubuntu&#34;&gt;Большинство ее возможностей работает благодаря интеграции с системой инициализации Systemd. В последнее время все меньше и меньше используется SysV init scripts и все больше и больше Systemd unit files. Рано или поздно Systemd вытеснит и полностью заменит Upstart в Ubuntu.&lt;/h1&gt;
&lt;h1 id=&#34;задачи-могут-быть-запущены-и-остановлены-с-помощью-программ-start-и-stop-расположенных-в-каталоге-sbin-каждая-из-этих-программ-должна-быть-параметризована-списком-задач-которые-необходимо-обработать-обе-программы-выдают-результаты-своей-работы-в-стандартный-поток-вывода&#34;&gt;Задачи могут быть запущены и остановлены с помощью программ start и stop, расположенных в каталоге /sbin. Каждая из этих программ должна быть параметризована списком задач, которые необходимо обработать. Обе программы выдают результаты своей работы в стандартный поток вывода.&lt;/h1&gt;
&lt;h1 id=&#34;статус-программы-как-следует-из-названия-позволяет-узнать-состояние-задачи-она-отображает-сначала-имя-задачи-затем-последнюю-операцию-выполненную-над-задачей-стартстоп-текущее-состояние-и-идентификатор-процесса-если-таковой-имеется-список-всех-задач-и-их-статусов-на-данный-момент-можно-получить-с-помощью-команды-initctl-list-с-помощью-команды-initctl-emit-у-вас-есть-возможность-генерировать-любое-событие-это-очень-полезно-при-написании-собственных-заданий&#34;&gt;Статус программы, как следует из названия, позволяет узнать состояние задачи. Она отображает сначала имя задачи, затем последнюю операцию, выполненную над задачей (старт/стоп), текущее состояние и идентификатор процесса, если таковой имеется. Список всех задач и их статусов на данный момент можно получить с помощью команды initctl list. С помощью команды initctl emit у вас есть возможность генерировать любое событие. Это очень полезно при написании собственных заданий.&lt;/h1&gt;
&lt;h1 id=&#34;системные-процессы-хранятся-в-каталоге-etcinit-а-пользовательские-процессы---в-каталоге-init-рабочие-процессы-пользователей-запускаются-в-их-сеансах-такие-процессы-не-являются-общесистемными-все-процессы-независимо-от-их-типа-всегда-определяются-в-конфигурационном-файле-conf-где-их-имя-должно-представлять-выполняемую-службу-или-задачу&#34;&gt;Системные процессы хранятся в каталоге /etc/init/, а пользовательские процессы - в каталоге ~/.init/. Рабочие процессы пользователей запускаются в их сеансах. Такие процессы не являются общесистемными. Все процессы, независимо от их типа, всегда определяются в конфигурационном файле (.conf), где их имя должно представлять выполняемую службу или задачу.&lt;/h1&gt;
&lt;h1 id=&#34;процесс-в-состоянии-после-запуска-считается-запущенным-процессом-он-остается-запущенным-до-состояния-pre-stop-в-котором-он-готовится-к-остановке-после-этого-процесс-останавливается-и-переходит-в-состояние-post-stop-очистка-системы&#34;&gt;Процесс в состоянии после запуска считается запущенным процессом. Он остается запущенным до состояния pre-stop, в котором он готовится к остановке. После этого процесс останавливается и переходит в состояние post-stop (очистка системы).&lt;/h1&gt;
&lt;h1 id=&#34;upstart---это-система-инициализации-на-основе-событий-разработанная-компанией-canonical-и-призванная-заменить-sysv-она-может-запускать-системные-службы-выполнять-различные-задачи-проверять-их-во-время-выполнения-и-предпринимать-действия-в-ответ-на-системные-события&#34;&gt;Upstart - это система инициализации на основе событий, разработанная компанией Canonical и призванная заменить SysV. Она может запускать системные службы, выполнять различные задачи, проверять их во время выполнения и предпринимать действия в ответ на системные события.&lt;/h1&gt;
&lt;h1 id=&#34;большинство-ее-функций-работает-благодаря-интеграции-с-системой-инициализации-systemd&#34;&gt;Большинство ее функций работает благодаря интеграции с системой инициализации Systemd.&lt;/h1&gt;
</description>
    </item>
    
    <item>
      <title>Моя прошлая неделя</title>
      <link>https://artyombabenko.github.io/ru/post/last_week5/</link>
      <pubDate>Sat, 04 Jun 2022 14:17:33 +0300</pubDate>
      <guid>https://artyombabenko.github.io/ru/post/last_week5/</guid>
      <description>&lt;h1 id=&#34;my-last-week&#34;&gt;My last week&lt;/h1&gt;
&lt;h2 id=&#34;эта-неделя-была-трудной-для-меня-первый-курс-университета-подходит-к-концу-скоро-будут-выставлять-баллы-нужно-сдавать-задолженные-работы-я-сделал-доклад-последние-лабораторные-работы-по-данному-предмету-а-также-последний-этап-индивидуального-проекта-однако-я-все-таки-успел-развлечься-так-как-мы-с-друзьями-ходили-гулять-в-парк-мы-покатались-на-качелях-поели-сахарную-вату-покатались-на-велосипедах&#34;&gt;Эта неделя была трудной для меня. Первый курс университета подходит к концу, скоро будут выставлять баллы, нужно сдавать задолженные работы. Я сделал доклад, последние лабораторные работы по данному предмету, а также последний этап индивидуального проекта. Однако я все-таки успел развлечься, так как мы с друзьями ходили гулять в парк. Мы покатались на качелях, поели сахарную вату, покатались на велосипедах.&lt;/h2&gt;
&lt;h1 id=&#34;result-of-the-week&#34;&gt;Result of the week&lt;/h1&gt;
&lt;h2 id=&#34;я-считаю-что-эта-неделя-была-очень-продуктивной-я-доделал-все-лабораторные-работы-и-закончил-проект&#34;&gt;Я считаю что эта неделя была очень продуктивной, я доделал все лабораторные работы и закончил проект.&lt;/h2&gt;
</description>
    </item>
    
    <item>
      <title>Языки научного программирования</title>
      <link>https://artyombabenko.github.io/ru/post/scientifi%D1%81_programming_languages/</link>
      <pubDate>Sat, 28 May 2022 08:53:25 +0300</pubDate>
      <guid>https://artyombabenko.github.io/ru/post/scientifi%D1%81_programming_languages/</guid>
      <description>&lt;h1 id=&#34;введение&#34;&gt;Введение&lt;/h1&gt;
&lt;h2 id=&#34;прогресс-компьютерной-техники-определил-процесс-появления-новых-разнообразных-знаковых-систем-для-записи-алгоритмов---языков-программирования-смысл-появления-такого-языка---оснащение-набора-вычислительных-формул-дополнительной-информацией-превращение-этого-набора-в-алгоритм-язык-программирования---формальная-знаковая-система-предназначенная-для-записи-компьютерных-программ-язык-программирования-задает-набор-лексических-синтаксических-и-семантических-правил-определяющих-внешний-вид-программы-и-действия-которые-исполнитель-компьютер-будет-выполнять-под-ее-управлением&#34;&gt;Прогресс компьютерной техники определил процесс появления новых разнообразных знаковых систем для записи алгоритмов - языков программирования. Смысл появления такого языка - оснащение набора вычислительных формул дополнительной информацией, превращение этого набора в алгоритм. Язык программирования - формальная знаковая система, предназначенная для записи компьютерных программ. Язык программирования задает набор лексических, синтаксических и семантических правил, определяющих внешний вид программы и действия, которые исполнитель (компьютер) будет выполнять под ее управлением.&lt;/h2&gt;
&lt;h2 id=&#34;с-момента-создания-первых-программируемых-машин-человечество-придумало-более-восьми-с-половиной-тысяч-языков-программирования-каждый-год-их-число-пополняется-новыми-некоторые-языки-используются-лишь-небольшим-числом-собственных-разработчиков-другие-известны-миллионам-людей-профессиональные-программисты-иногда-используют-в-своей-работе-более-десятка-различных-языков-программирования&#34;&gt;С момента создания первых программируемых машин человечество придумало более восьми с половиной тысяч языков программирования. Каждый год их число пополняется новыми. Некоторые языки используются лишь небольшим числом собственных разработчиков, другие известны миллионам людей. Профессиональные программисты иногда используют в своей работе более десятка различных языков программирования.&lt;/h2&gt;
&lt;h1 id=&#34;языки-программирования&#34;&gt;Языки программирования&lt;/h1&gt;
&lt;h2 id=&#34;все-множество-языков-программирования-можно-разделить-на-две-группы-языки-низкого-уровня-и-языки-высокого-уровня&#34;&gt;Все множество языков программирования можно разделить на две группы: языки низкого уровня и языки высокого уровня.&lt;/h2&gt;
&lt;h2 id=&#34;языки-низкого-уровня---это-языки-ассемблера-от-английского---собирать-язык-ассемблера-использует-символическую-нотацию-команд-которые-легко-понять-и-быстро-запомнить-вместо-двоичных-последовательностей-команд-в-качестве-инструкций-записываются-символьные-обозначения-а-вместо-двоичных-адресов-данных-используемых-при-выполнении-инструкций-записываются-символьные-имена-этих-данных-по-выбору-программиста-язык-ассемблера-иногда-называют-мнемокодом-или-автокодом&#34;&gt;Языки низкого уровня - это языки ассемблера (от английского - собирать). Язык ассемблера использует символическую нотацию команд, которые легко понять и быстро запомнить. Вместо двоичных последовательностей команд в качестве инструкций записываются символьные обозначения, а вместо двоичных адресов данных, используемых при выполнении инструкций, записываются символьные имена этих данных по выбору программиста. Язык ассемблера иногда называют мнемокодом или автокодом.&lt;/h2&gt;
&lt;h2 id=&#34;большинство-программистов-используют-языки-высокого-уровня-для-написания-программ-как-и-обычный-человеческий-язык-такой-язык-имеет-свой-алфавит---набор-символов-используемых-в-языке-из-этих-символов-составляются-так-называемые-ключевые-слова-языка-каждое-из-ключевых-слов-выполняет-свою-функцию-подобно-тому-как-в-привычном-нам-языке-слова-составленные-из-букв-алфавита-данного-языка-могут-выполнять-функции-различных-частей-речи-ключевые-слова-соединяются-в-предложения-в-соответствии-с-определенными-синтаксическими-правилами-языка-каждое-предложение-определяет-определенную-последовательность-действий-которые-должен-выполнить-компьютер&#34;&gt;Большинство программистов используют языки высокого уровня для написания программ. Как и обычный человеческий язык, такой язык имеет свой алфавит - набор символов, используемых в языке. Из этих символов составляются так называемые ключевые слова языка. Каждое из ключевых слов выполняет свою функцию, подобно тому, как в привычном нам языке слова, составленные из букв алфавита данного языка, могут выполнять функции различных частей речи. Ключевые слова соединяются в предложения в соответствии с определенными синтаксическими правилами языка. Каждое предложение определяет определенную последовательность действий, которые должен выполнить компьютер.&lt;/h2&gt;
&lt;h2 id=&#34;язык-более-высокого-уровня-выступает-в-качестве-посредника-между-людьми-и-компьютерами-позволяя-людям-общаться-с-компьютерами-в-более-понятной-для-человека-форме-часто-такой-язык-помогает-выбрать-правильный-метод-решения-проблемы&#34;&gt;Язык более высокого уровня выступает в качестве посредника между людьми и компьютерами, позволяя людям общаться с компьютерами в более понятной для человека форме. Часто такой язык помогает выбрать правильный метод решения проблемы.&lt;/h2&gt;
&lt;h2 id=&#34;прежде-чем-написать-программу-на-языке-высокого-уровня-программист-должен-создать-алгоритм-решения-проблемы-то-есть-пошаговый-план-действий-которые-необходимо-выполнить-для-решения-этой-проблемы-именно-поэтому-языки-требующие-предварительного-составления-алгоритма-часто-называют-алгоритмическими-языками&#34;&gt;Прежде чем написать программу на языке высокого уровня, программист должен создать алгоритм решения проблемы, то есть пошаговый план действий, которые необходимо выполнить для решения этой проблемы. Именно поэтому языки, требующие предварительного составления алгоритма, часто называют алгоритмическими языками.&lt;/h2&gt;
&lt;h1 id=&#34;ассемблер&#34;&gt;Ассемблер&lt;/h1&gt;
&lt;h2 id=&#34;язык-ассемблера---это-символическое-представление-машинного-языка-он-делает-программирование-проще-чем-программирование-в-машинных-кодах-программисту-не-приходится-использовать-реальные-адреса-ячеек-памяти-с-находящимися-в-них-данными-участвующими-в-операции-и-вычисленными-результатами-а-также-адреса-команд-к-которым-программа-не-обращается-некоторые-задачи-например-обмен-с-нестандартными-устройствами-обработки-данных-сложной-структуры-не-могут-быть-решены-с-помощью-языков-программирования-высокого-уровня&#34;&gt;Язык ассемблера - это символическое представление машинного языка. Он делает программирование проще, чем программирование в машинных кодах. Программисту не приходится использовать реальные адреса ячеек памяти с находящимися в них данными, участвующими в операции, и вычисленными результатами, а также адреса команд, к которым программа не обращается. Некоторые задачи, например, обмен с нестандартными устройствами обработки данных сложной структуры, не могут быть решены с помощью языков программирования высокого уровня.&lt;/h2&gt;
&lt;h2 id=&#34;язык-ассемблера---это-машинный-язык-и-программист-реализующий-любую-задачу-на-языках-высокого-уровня-с-помощью-ассемблера-может-определить-является-ли-решение-этой-задачи-осмысленным-с-точки-зрения-использования-компьютера-умение-разобраться-в-языке-ассемблера-облегчает-поиск-ошибок-в-программах-так-как-некоторые-языки-являются-компиляторами&#34;&gt;Язык Ассемблера - это машинный язык. И программист, реализующий любую задачу на языках высокого уровня, с помощью Ассемблера может определить, является ли решение этой задачи осмысленным, с точки зрения использования компьютера. Умение разобраться в языке Ассемблера облегчает поиск ошибок в программах, так как некоторые языки являются компиляторами.&lt;/h2&gt;
&lt;h1 id=&#34;лисп&#34;&gt;Лисп&lt;/h1&gt;
&lt;h2 id=&#34;lisp---второй-старейший-язык-программирования-list-information-symbol-processing-был-разработан-дж-маккарти-в-1962-году-для-обработки-строк-символов-а-не-чисел-именно-это-назначение-лиспа-открыло-для-программистов-новую-область-деятельности-известную-сегодня-как-искусственный-интеллект-в-настоящее-время-lisp-успешно-используется-в-экспертных-системах-аналитических-вычислительных-системах-и-тд&#34;&gt;Lisp - второй старейший язык программирования (List Information Symbol Processing), был разработан Дж. Маккарти в 1962 году для обработки строк символов, а не чисел. Именно это назначение Лиспа открыло для программистов новую область деятельности, известную сегодня как &amp;ldquo;искусственный интеллект&amp;rdquo;. В настоящее время Lisp успешно используется в экспертных системах, аналитических вычислительных системах и т.д.&lt;/h2&gt;
&lt;h2 id=&#34;обширная-область-возможных-применений-лиспа-вызвала-появление-множества-различных-диалектов-лиспа-что-привело-к-созданию-в-начале-1980-х-годов-комитета-common-lisp-который-должен-был-выбрать-наиболее-подходящий-диалект-лиспа-и-предложить-его-в-качестве-основного-этот-диалект-выбранный-комитетом-в-1985-году-был-назван-common-lisp-с-тех-пор-он-был-принят-университетами-сша-а-также-многими-разработчиками-систем-искусственного-интеллекта-в-качестве-основного-диалекта-языка-лисп&#34;&gt;Обширная область возможных применений Лиспа вызвала появление множества различных диалектов Лиспа, что привело к созданию в начале 1980-х годов Комитета Common LISP, который должен был выбрать наиболее подходящий диалект Лиспа и предложить его в качестве основного. Этот диалект, выбранный Комитетом в 1985 году, был назван Common LISP. С тех пор он был принят университетами США, а также многими разработчиками систем искусственного интеллекта в качестве основного диалекта языка Лисп.&lt;/h2&gt;
&lt;h2 id=&#34;первоначально-лисп-задумывался-как-теоретический-инструмент-для-рекурсивных-конструкций-но-сегодня-он-превратился-в-мощный-инструмент-предоставляющий-программисту-разнообразную-поддержку-позволяющую-быстро-создавать-прототипы-очень-и-очень-серьезных-систем-профессор-дж-самман-из-массачусетского-технологического-института-отметил-что-математическая-четкость-и-предельная-ясность-лиспа---это-еще-не-все-главное-что-лисп-позволяет-сформулировать-и-запомнить-идиомы-столь-характерные-для-проектов-искусственного-интеллекта&#34;&gt;Первоначально Лисп задумывался как теоретический инструмент для рекурсивных конструкций, но сегодня он превратился в мощный инструмент, предоставляющий программисту разнообразную поддержку, позволяющую быстро создавать прототипы очень и очень серьезных систем. Профессор Дж. Самман из Массачусетского технологического института отметил, что математическая четкость и предельная ясность Лиспа - это еще не все. Главное, что Лисп позволяет сформулировать и запомнить &amp;ldquo;идиомы&amp;rdquo;, столь характерные для проектов искусственного интеллекта.&lt;/h2&gt;
&lt;h1 id=&#34;basic&#34;&gt;Basic&lt;/h1&gt;
&lt;h2 id=&#34;в-середине-60-х-годов-1963-в-дартмутском-колледже-сша-был-создан-язык-basic-basic-от-beginners-allpurpose-instructional-code-со-временем-когда-стали-появляться-другие-диалекты-этот-оригинальный-диалект-стал-известен-как-dartmouth-basic-язык-был-основан-частично-на-fortran-ii-и-частично-на-algol-60-с-дополнениями-делающими-его-пригодным-для-разделения-времени-и-позднее-для-обработки-текста-и-матричной-арифметики-бейсик-был-первоначально-реализован-на-мэйнфрейме-ge-265-с-поддержкой-нескольких-терминалов-вопреки-распространенному-мнению-с-самого-начала-он-был-компилируемым-языком-бейсик-был-разработан-для-того-чтобы-студенты-могли-писать-программы-используя-терминалы-с-разделенным-временем-он-был-создан-как-решение-проблем-связанных-со-сложностью-старых-языков-он-был-предназначен-для-более-простых-пользователей-которых-не-столько-интересовала-скорость-работы-программ-сколько-возможность-использовать-компьютер-для-выполнения-своей-работы&#34;&gt;В середине 60-х годов (1963) в Дартмутском колледже (США) был создан язык BASIC (BASIC от Beginner&amp;rsquo;s Allpurpose Instructional Code). Со временем, когда стали появляться другие диалекты, этот &amp;ldquo;оригинальный&amp;rdquo; диалект стал известен как Dartmouth BASIC. Язык был основан частично на Fortran II и частично на Algol-60, с дополнениями, делающими его пригодным для разделения времени и, позднее, для обработки текста и матричной арифметики. Бейсик был первоначально реализован на мэйнфрейме GE-265 с поддержкой нескольких терминалов. Вопреки распространенному мнению, с самого начала он был компилируемым языком. Бейсик был разработан для того, чтобы студенты могли писать программы, используя терминалы с разделенным временем. Он был создан как решение проблем, связанных со сложностью старых языков. Он был предназначен для более &amp;ldquo;простых&amp;rdquo; пользователей, которых не столько интересовала скорость работы программ, сколько возможность использовать компьютер для выполнения своей работы.&lt;/h2&gt;
&lt;h2 id=&#34;с-появлением-переводчика-quickbasic-от-microsoft-разработчики-получили-возможность-создавать-приложения-на-basic-из-отдельно-скомпилированных-модулей-некоторые-из-которых-могли-быть-написаны-на-других-языках-теперь-как-и-в-случае-с-другими-ведущими-языками-программирования-у-разработчика-есть-выбор-из-нескольких-промышленных-библиотек-подпрограмм-которые-содержат-готовые-решения-для-общих-задач-программирования&#34;&gt;С появлением переводчика QuickBasic от Microsoft разработчики получили возможность создавать приложения на Basic из отдельно скомпилированных модулей, некоторые из которых могли быть написаны на других языках. Теперь, как и в случае с другими ведущими языками программирования, у разработчика есть выбор из нескольких промышленных библиотек подпрограмм, которые содержат готовые решения для общих задач программирования.&lt;/h2&gt;
&lt;h1 id=&#34;c&#34;&gt;C&lt;/h1&gt;
&lt;h2 id=&#34;это-язык-программирования-общего-назначения-хорошо-известный-своей-эффективностью-экономичностью-и-переносимостью-на-c-можно-создавать-программы-которые-делают-все-что-угодно-еще-одним-преимуществом-языка-c-является-то-что-он-позволяет-использовать-все-возможности-компьютера&#34;&gt;Это язык программирования общего назначения, хорошо известный своей эффективностью, экономичностью и переносимостью. На C можно создавать программы, которые делают все, что угодно. Еще одним преимуществом языка C является то, что он позволяет использовать все возможности компьютера.&lt;/h2&gt;
&lt;h2 id=&#34;особенности-языка-c-предоставляет-полный-набор-операторов-структурного-программирования-поддерживает-указатели-на-переменные-и-функции-содержит-препроцессор-который-обрабатывает-текстовые-файлы-перед-компиляцией-позволяет-принимать-различные-решения-в-конкретных-ситуациях&#34;&gt;Особенности языка C: предоставляет полный набор операторов структурного программирования; поддерживает указатели на переменные и функции; содержит препроцессор, который обрабатывает текстовые файлы перед компиляцией; позволяет принимать различные решения в конкретных ситуациях.&lt;/h2&gt;
&lt;h1 id=&#34;c-1&#34;&gt;C++&lt;/h1&gt;
&lt;h2 id=&#34;название-c-было-придумано-риком-масситти-в-1983-году-оно-указывает-на-эволюционный-характер-перехода-к-нему-от-языка-c----это-инкрементная-операция-в-c-немного-более-короткое-название-c-является-синтаксической-ошибкой-и-уже-использовалось-в-качестве-названия-совершенно-другого-языка&#34;&gt;Название C++ было придумано Риком Масситти в 1983 году. Оно указывает на эволюционный характер перехода к нему от языка C. &amp;ldquo;++&amp;rdquo; - это инкрементная операция в C. Немного более короткое название C++ является синтаксической ошибкой и уже использовалось в качестве названия совершенно другого языка.&lt;/h2&gt;
&lt;h2 id=&#34;c---это-супермножество-языка-программирования-c-в-дополнение-к-возможностям-которые-предоставляет-язык-c-c-обеспечивает-гибкое-и-эффективное-средство-определения-новых-типов-используя-определения-новых-типов-которые-точно-соответствуют-концепциям-приложения-программист-может-разделить-разрабатываемую-программу-на-легко-управляемые-части-такой-метод-построения-программ-часто-называют-абстракцией-данных-информация-о-типах-содержится-в-некоторых-определяемых-пользователем-объектах-типов&#34;&gt;C++ - это супермножество языка программирования C. В дополнение к возможностям, которые предоставляет язык C, C++ обеспечивает гибкое и эффективное средство определения новых типов. Используя определения новых типов, которые точно соответствуют концепциям приложения, программист может разделить разрабатываемую программу на легко управляемые части. Такой метод построения программ часто называют абстракцией данных. Информация о типах содержится в некоторых определяемых пользователем объектах типов.&lt;/h2&gt;
&lt;h2 id=&#34;такие-объекты-легко-и-надежно-использовать-в-ситуациях-когда-их-тип-не-может-быть-задан-во-время-компиляции-язык-c-был-выбран-в-качестве-базового-языка-для-c-потому-что-он-универсален-лаконичен-и-относительно-низкоуровневый-отвечает-большинству-задач-системного-программирования-работает-везде-и-на-всем-подходит-для-среды-программирования-unix&#34;&gt;Такие объекты легко и надежно использовать в ситуациях, когда их тип не может быть задан во время компиляции. Язык C был выбран в качестве базового языка для C++, потому что он: универсален, лаконичен и относительно низкоуровневый, отвечает большинству задач системного программирования, работает везде и на всем, подходит для среды программирования UNIX.&lt;/h2&gt;
&lt;h1 id=&#34;pascal&#34;&gt;Pascal&lt;/h1&gt;
&lt;h2 id=&#34;это-высокоуровневый-язык-программирования-общего-назначения-один-из-самых-известных-языков-программирования-он-широко-используется-в-промышленном-программировании-преподавании-программирования-в-высших-учебных-заведениях-и-является-основой-для-большого-количества-других-языков-он-был-создан-никлаусом-виртом-в-19689-году-опубликован-в-1970-году-после-его-участия-в-комитете-по-разработке-стандарта-algol-68-паскаль-был-создан-как-язык-для-обучения-процедурному-программированию-язык-был-назван-в-честь-блеза-паскаля-выдающегося-французского-математика-физика-литератора-и-философа-xvii-века-изобретателя-первой-в-мире-арифметической-машины-компилятор-паскаля-был-написан-на-самом-языке-паскаль-с-использованием-метода-разматывания-когда-создается-ядро-языка-с-постепенным-наращиванием-новых-возможностей&#34;&gt;Это высокоуровневый язык программирования общего назначения. Один из самых известных языков программирования, он широко используется в промышленном программировании, преподавании программирования в высших учебных заведениях и является основой для большого количества других языков. Он был создан Никлаусом Виртом в 1968/9 году (опубликован в 1970 году), после его участия в комитете по разработке стандарта Algol-68. Паскаль был создан как язык для обучения процедурному программированию. Язык был назван в честь Блеза Паскаля, выдающегося французского математика, физика, литератора и философа XVII века, изобретателя первой в мире арифметической машины. Компилятор Паскаля был написан на самом языке Паскаль с использованием &amp;ldquo;метода разматывания&amp;rdquo;, когда создается ядро языка с постепенным наращиванием новых возможностей.&lt;/h2&gt;
&lt;h2 id=&#34;особенностями-языка-являются-строгая-типизация-и-наличие-структурного-процедурного-программирования-в-паскале-минимизированы-возможные-синтаксические-неоднозначности-а-сам-синтаксис-автор-постарался-сделать-интуитивно-понятным-даже-при-первом-изучении-языка&#34;&gt;Особенностями языка являются строгая типизация и наличие структурного (процедурного) программирования. В Паскале минимизированы возможные синтаксические неоднозначности, а сам синтаксис автор постарался сделать интуитивно понятным даже при первом изучении языка.&lt;/h2&gt;
&lt;h1 id=&#34;java&#34;&gt;Java&lt;/h1&gt;
&lt;h2 id=&#34;java---это-объектно-ориентированный-язык-программирования-разработанный-компанией-sunmicrosystems-java-приложения-обычно-компилируются-в-специальный-байт-код-поэтому-они-могут-работать-на-любой-виртуальной-машине-java-virtual-machine-jvm-независимо-от-архитектуры-компьютера-официальная-дата-выпуска---23-мая-1995-года-первоначально-язык-назывался-oak-дуб-и-был-разработан-джеймсом-гослингом-для-программирования-бытовых-электронных-устройств-позже-он-был-переименован-в-java-и-использовался-для-написания-клиентских-приложений-и-серверного-программного-обеспечения-назван-в-честь-марки-кофе-java-поэтому-на-официальной-эмблеме-языка-изображена-чашка-с-дымящимся-кофе&#34;&gt;Java - это объектно-ориентированный язык программирования, разработанный компанией SunMicrosystems. Java-приложения обычно компилируются в специальный байт-код, поэтому они могут работать на любой виртуальной машине Java Virtual Machine (JVM) независимо от архитектуры компьютера. Официальная дата выпуска - 23 мая 1995 года. Первоначально язык назывался Oak (&amp;ldquo;дуб&amp;rdquo;) и был разработан Джеймсом Гослингом для программирования бытовых электронных устройств. Позже он был переименован в Java и использовался для написания клиентских приложений и серверного программного обеспечения. Назван в честь марки кофе Java, поэтому на официальной эмблеме языка изображена чашка с дымящимся кофе.&lt;/h2&gt;
&lt;h2 id=&#34;преимущество-исполнения-программ-заключается-в-полной-независимости-байткода-от-операционной-системы-а-оборудование-позволяет-исполнять-java-приложения-на-любом-устройстве-для-которого-существует-соответствующая-виртуальная-машина-другой-важной-особенностью-технологии-java-является-гибкая-система-безопасности-обусловленная-тем-что-выполнение-программы-полностью-контролируется-виртуальной-машиной-любая-операция-превышающая-установленные-полномочия-программы-например-попытка-несанкционированного-доступа-к-данным-или-подключение-к-другому-компьютеру-приведет-к-немедленному-прерыванию-работы&#34;&gt;Преимущество исполнения программ заключается в полной независимости байткода от операционной системы, а оборудование позволяет исполнять Java-приложения на любом устройстве, для которого существует соответствующая виртуальная машина. Другой важной особенностью технологии Java является гибкая система безопасности, обусловленная тем, что выполнение программы полностью контролируется виртуальной машиной. Любая операция, превышающая установленные полномочия программы (например, попытка несанкционированного доступа к данным или подключение к другому компьютеру), приведет к немедленному прерыванию работы.&lt;/h2&gt;
&lt;h2 id=&#34;одним-из-недостатков-концепции-виртуальной-машины-является-то-что-выполнение-байт-кода-виртуальной-машиной-может-ухудшить-производительность-программ-и-алгоритмов-реализованных-на-языке-java-это-было-справедливо-для-первых-версий-виртуальной-машины-java-но-в-последнее-время-это-стало-практически-несущественным-этому-способствовал-ряд-усовершенствований-использование-технологии-трансляции-байткода-в-машинный-код-jit-технология-с-возможностью-сохранения-версий-классов-в-машинном-коде-широкое-использование-платформенно-ориентированного-native-кода-в-стандартных-библиотеках-аппаратные-средства-обеспечивающие-ускоренную-обработку-байткода-например-технология-jazelle-поддерживаемая-некоторыми-процессорами-arm&#34;&gt;Одним из недостатков концепции виртуальной машины является то, что выполнение байт-кода виртуальной машиной может ухудшить производительность программ и алгоритмов, реализованных на языке Java. Это было справедливо для первых версий виртуальной машины Java, но в последнее время это стало практически несущественным. Этому способствовал ряд усовершенствований: использование технологии трансляции байткода в машинный код (JIT-технология) с возможностью сохранения версий классов в машинном коде, широкое использование платформенно-ориентированного (native-кода) в стандартных библиотеках, аппаратные средства, обеспечивающие ускоренную обработку байткода (например, технология Jazelle, поддерживаемая некоторыми процессорами ARM).&lt;/h2&gt;
&lt;h2 id=&#34;идеи-лежащие-в-основе-концепции-и-различных-реализаций-среды-виртуальной-машины-java-вдохновили-многих-энтузиастов-на-расширение-списка-языков-которые-можно-было-бы-использовать-для-создания-программ-работающих-на-виртуальной-машинеэти-идеи-также-нашли-свое-выражение-в-спецификации-общей-языковой-инфраструктуры-cli-которая-лежит-в-основе-платформы-net-компании-microsoft&#34;&gt;Идеи, лежащие в основе концепции и различных реализаций среды виртуальной машины Java, вдохновили многих энтузиастов на расширение списка языков, которые можно было бы использовать для создания программ, работающих на виртуальной машине.Эти идеи также нашли свое выражение в спецификации общей языковой инфраструктуры CLI, которая лежит в основе платформы .NET компании Microsoft.&lt;/h2&gt;
&lt;h1 id=&#34;заключение&#34;&gt;Заключение&lt;/h1&gt;
&lt;h2 id=&#34;изобретение-языков-программирования-более-высокого-уровня-а-также-их-постоянное-совершенствование-и-развитие-позволили-человеку-не-только-общаться-с-машиной-и-понимать-ее-но-и-использовать-компьютеры-для-сложнейших-расчетов-в-области-авиации-ракетостроения-медицины-и-даже-экономики&#34;&gt;Изобретение языков программирования более высокого уровня, а также их постоянное совершенствование и развитие позволили человеку не только общаться с машиной и понимать ее, но и использовать компьютеры для сложнейших расчетов в области авиации, ракетостроения, медицины и даже экономики.&lt;/h2&gt;
&lt;h2 id=&#34;сегодня-на-любом-среднем-или-крупном-предприятии-есть-группа-программистов-со-знанием-программирования-на-разных-языках-которые-редактируют-изменяют-и-модифицируют-программы-используемые-сотрудниками-предприятия-это-говорит-о-том-что-люди-со-знанием-и-опытом-работы-с-различными-языками-программирования-востребованы-на-рынке-труда&#34;&gt;Сегодня на любом среднем или крупном предприятии есть группа программистов со знанием программирования на разных языках, которые редактируют, изменяют и модифицируют программы, используемые сотрудниками предприятия. Это говорит о том, что люди со знанием и опытом работы с различными языками программирования востребованы на рынке труда.&lt;/h2&gt;
&lt;h2 id=&#34;то-есть-я-доказал-что-с-усовершенствованием-старых-языков-программирования-и-созданием-новых-людям-стало-легче-работать-а-программирование-стало-менее-сложным&#34;&gt;То есть, я доказал, что с усовершенствованием старых языков программирования и созданием новых, людям стало легче работать, а программирование стало менее сложным.&lt;/h2&gt;
&lt;h2 id=&#34;в-этом-проекте-я-рассмотрел-наиболее-распространенные-языки-программирования-такие-как-fortran-pascal-basic-которые-используются-для-научных-расчетов-для-обучения-программированию-начинающих-программистов&#34;&gt;В этом проекте я рассмотрел наиболее распространенные языки программирования, такие как: Fortran, Pascal, Basic, которые используются для научных расчетов, для обучения программированию начинающих программистов.&lt;/h2&gt;
&lt;h2 id=&#34;на-данный-момент-я-уже-изучаю-программирование-на-языке-python-и-думаю-о-том-чтобы-связать-свою-жизнь-с-профессией-программиста&#34;&gt;На данный момент я уже изучаю программирование на языке Python и думаю о том, чтобы связать свою жизнь с профессией программиста.&lt;/h2&gt;
&lt;h2 id=&#34;несмотря-на-то-что-современный-уровень-развития-языков-программирования-достаточно-высок-тенденция-их-развития-как-и-развития-информационных-технологий-в-целом-такова-что-можно-предположить-что-в-ближайшем-будущем-знания-человека-в-этой-области-помогут-создать-языки-способные-принимать-обрабатывать-и-передавать-информацию-в-виде-мысли-слова-звука-или-жеста&#34;&gt;Несмотря на то, что современный уровень развития языков программирования достаточно высок, тенденция их развития, как и развития информационных технологий в целом, такова, что можно предположить, что в ближайшем будущем знания человека в этой области помогут создать языки, способные принимать, обрабатывать и передавать информацию в виде мысли, слова, звука или жеста.&lt;/h2&gt;
</description>
    </item>
    
    <item>
      <title>Моя прошлая неделя</title>
      <link>https://artyombabenko.github.io/ru/post/mylastweek4/</link>
      <pubDate>Sat, 28 May 2022 08:52:25 +0300</pubDate>
      <guid>https://artyombabenko.github.io/ru/post/mylastweek4/</guid>
      <description>&lt;h1 id=&#34;моя-прошлая-неделя&#34;&gt;Моя прошлая неделя&lt;/h1&gt;
&lt;h2 id=&#34;эта-неделя-была-не-такой-насыщенной-как-предыдущие-на-этой-неделе-у-нас-были-последние-уроки-физкультуры-и-английского-языка-я-сделал-много-лабораторных-работ-снял-много-видеоотчетов-я-просмотрел-много-видео-на-youtube-вот-как-прошла-моя-неделя&#34;&gt;Эта неделя была не такой насыщенной, как предыдущие. На этой неделе у нас были последние уроки физкультуры и английского языка. Я сделал много лабораторных работ, снял много видеоотчетов. Я просмотрел много видео на youtube. Вот как прошла моя неделя.&lt;/h2&gt;
&lt;h1 id=&#34;итог-недели&#34;&gt;Итог недели&lt;/h1&gt;
&lt;h1 id=&#34;я-думаю-что-эта-неделя-была-менее-продуктивной-чем-другие-на-этой-неделе-я-больше-отдыхал-смотрел-видео-в-интернете-и-спал&#34;&gt;Я думаю, что эта неделя была менее продуктивной, чем другие. На этой неделе я больше отдыхал, смотрел видео в интернете и спал.&lt;/h1&gt;
</description>
    </item>
    
    <item>
      <title>Индивидуальный проект Персональный сайт научного работника</title>
      <link>https://artyombabenko.github.io/ru/project/example/</link>
      <pubDate>Fri, 27 May 2022 00:00:00 +0000</pubDate>
      <guid>https://artyombabenko.github.io/ru/project/example/</guid>
      <description>&lt;h1 id=&#34;по-предмету-операционные-системы-я-должен-был-выполнить-проект---создать-личный-веб-сайт-проект-состоял-из-6-этапов-на-каждый-из-которых-отводилась-неделя-на-этапах-я-должен-был-писать-и-создавать-посты-на-различные-темы-добавлять-информацию-о-себе-и-тд&#34;&gt;По предмету &amp;ldquo;Операционные системы&amp;rdquo; я должен был выполнить проект - создать личный веб-сайт. Проект состоял из 6 этапов, на каждый из которых отводилась неделя. На этапах я должен был писать и создавать посты на различные темы, добавлять информацию о себе и т.д.&lt;/h1&gt;
&lt;h1 id=&#34;этапы-проекта&#34;&gt;Этапы проекта:&lt;/h1&gt;
&lt;h2 id=&#34;1-размещение-на-странице-github-заготовки-для-личного-сайта&#34;&gt;1) Размещение на странице Github заготовки для личного сайта.&lt;/h2&gt;
&lt;h2 id=&#34;2-добавить-данные-о-себе-на-сайт-сделайте-пост-о-прошедшей-неделе-и-сделайте-пост-на-тему-по-выбору&#34;&gt;2) Добавить данные о себе на сайт. Сделайте пост о прошедшей неделе и сделайте пост на тему по выбору.&lt;/h2&gt;
&lt;h2 id=&#34;3-добавьте-на-сайт-достижения-сделайте-сообщение-за-последнюю-неделю-и-сделайте-сообщение-на-выбранную-тему&#34;&gt;3) Добавьте на сайт достижения. Сделайте сообщение за последнюю неделю и сделайте сообщение на выбранную тему.&lt;/h2&gt;
&lt;h2 id=&#34;4-добавьте-на-сайт-ссылки-на-научные-и-библиометрические-ресурсы-сделайте-сообщение-за-последнюю-неделю-и-оформите-пост-на-выбранную-тему&#34;&gt;4) Добавьте на сайт ссылки на научные и библиометрические ресурсы. Сделайте сообщение за последнюю неделю и оформите пост на выбранную тему.&lt;/h2&gt;
&lt;h2 id=&#34;5-добавьте-все-остальные-элементы-на-сайт-сделайте-сообщение-за-последнюю-неделю-и-оформите-пост-на-тему-по-выбору&#34;&gt;5) Добавьте все остальные элементы на сайт. Сделайте сообщение за последнюю неделю и оформите пост на тему по выбору.&lt;/h2&gt;
&lt;h2 id=&#34;6-разместите-двуязычный-сайт-на-github-сделайте-сообщение-за-последнюю-неделю-и-сделайте-сообщение-на-выбранную-тему-на-двух-языках&#34;&gt;6) Разместите двуязычный сайт на Github. Сделайте сообщение за последнюю неделю и сделайте сообщение на выбранную тему (на двух языках).&lt;/h2&gt;
</description>
    </item>
    
    <item>
      <title>Создание презентаций</title>
      <link>https://artyombabenko.github.io/ru/post/creating_presentations/</link>
      <pubDate>Sat, 21 May 2022 07:26:55 +0300</pubDate>
      <guid>https://artyombabenko.github.io/ru/post/creating_presentations/</guid>
      <description>&lt;h1 id=&#34;вступление&#34;&gt;Вступление&lt;/h1&gt;
&lt;h2 id=&#34;каждый-из-нас-хотя-бы-раз-попадал-на-выступление-с-невозможно-скучной-презентацией-слайды-были-перегружены-информацией-речь-была-монотонной-в-зале-стоял-гул-содержание-таких-выступлений-исчезает-из-памяти-через-минуту-после-начала&#34;&gt;Каждый из нас хотя бы раз попадал на выступление с невозможно скучной презентацией. Слайды были перегружены информацией, речь была монотонной, в зале стоял гул. Содержание таких выступлений исчезает из памяти через минуту после начала.&lt;/h2&gt;
&lt;h2 id=&#34;но-не-все-презентации-такие-некоторые-не-выходят-у-меня-из-головы-неделями-а-слова-из-них-вдохновляют-меня-на-действия-хорошая-презентация-понятна-даже-ребенку-красиво-оформлена-и-в-сочетании-с-сильной-идеей-может-изменить-мир&#34;&gt;Но не все презентации такие. Некоторые не выходят у меня из головы неделями, а слова из них вдохновляют меня на действия. Хорошая презентация понятна даже ребенку, красиво оформлена и в сочетании с сильной идеей может изменить мир.&lt;/h2&gt;
&lt;h2 id=&#34;как-сделать-красивую-и-интересную-презентацию-легче-чем-кажется-для-этого-не-нужно-быть-дизайнером-или-стивом-джобсом-достаточно-следовать-простым-правилам-и-приемам-из-этой-статьи-с-их-помощью-вы-сможете-вдохновлять-доносить-идеи-и-убеждать-людей-с-помощью-презентаций-а-если-время-поджимает-используйте-готовые-шаблоны-canva---многое-из-того-о-чем-мы-говорим-ниже-уже-есть-в-них&#34;&gt;Как сделать красивую и интересную презентацию? Легче, чем кажется. Для этого не нужно быть дизайнером или Стивом Джобсом, достаточно следовать простым правилам и приемам из этой статьи. С их помощью вы сможете вдохновлять, доносить идеи и убеждать людей с помощью презентаций. А если время поджимает, используйте готовые шаблоны Canva - многое из того, о чем мы говорим ниже, уже есть в них.&lt;/h2&gt;
&lt;h1 id=&#34;как-подготовить-презентацию&#34;&gt;Как подготовить презентацию?&lt;/h1&gt;
&lt;h2 id=&#34;прежде-чем-сесть-за-редакторский-стол-задайте-себе-несколько-вопросов-кто-ваша-аудитория-какова-основная-идея-презентации-как-вы-будете-ее-доказывать-что-люди-должны-понять-и-сделать-после-ваших-слов-чем-лучше-вы-подготовитесь-перед-выступлением-тем-точнее-будет-ваше-сообщение-даже-если-презентацию-будут-смотреть-онлайн-изучение-адресатов-и-работа-над-структурой-не-пройдут-даром&#34;&gt;Прежде чем сесть за редакторский стол, задайте себе несколько вопросов: Кто ваша аудитория? Какова основная идея презентации? Как вы будете ее доказывать? Что люди должны понять и сделать после ваших слов? Чем лучше вы подготовитесь перед выступлением, тем точнее будет ваше сообщение. Даже если презентацию будут смотреть онлайн, изучение адресатов и работа над структурой не пройдут даром.&lt;/h2&gt;
&lt;h1 id=&#34;основная-идея&#34;&gt;Основная идея&lt;/h1&gt;
&lt;h2 id=&#34;в-хороших-презентациях-всегда-есть-главная-идея-которая-красной-нитью-проходит-через-все-выступление-это-может-быть-призыв-толчок-к-принятию-решения-или-план-без-четкой-идеи-презентации-становятся-беспорядочными-и-запутанными-и-слушателям-бывает-трудно-понять-что-хотел-сказать-автор&#34;&gt;В хороших презентациях всегда есть главная идея, которая красной нитью проходит через все выступление. Это может быть призыв, толчок к принятию решения или план. Без четкой идеи презентации становятся беспорядочными и запутанными, и слушателям бывает трудно понять, что хотел сказать автор.&lt;/h2&gt;
&lt;h2 id=&#34;основная-идея-должна-быть-короткой-простой-и-запоминающейся-в-качестве-девиза-или-слогана&#34;&gt;Основная идея должна быть короткой, простой и запоминающейся. В качестве девиза или слогана.&lt;/h2&gt;
&lt;h2 id=&#34;мечта---самая-важная-часть-любой-презентации-после-того-как-вы-найдете-и-выделите-центральную-идею-вы-поймете-как-создать-презентацию-вокруг-нее-проверьте-каждый-слайд-вопросом-почему-это-важно-для-идеи-таким-образом-все-что-не-помогает-раскрыть-идею-просто-останется-за-кадром&#34;&gt;Мечта - самая важная часть любой презентации. После того как вы найдете и выделите центральную идею, вы поймете, как создать презентацию вокруг нее. Проверьте каждый слайд вопросом: &amp;ldquo;Почему это важно для идеи?&amp;rdquo;. Таким образом, все, что не помогает раскрыть идею, просто останется за кадром.&lt;/h2&gt;
&lt;h1 id=&#34;структура&#34;&gt;Структура&lt;/h1&gt;
&lt;h2 id=&#34;иногда-даже-сильные-идеи-теряются-в-презентациях-с-хаотичной-структурой-чтобы-этого-не-произошло-расставьте-все-по-местам-заранее-вот-несколько-способов-с-помощью-которых-вы-можете-интересно-донести-основную-идею-начните-с-небольшой-провокации-укажите-на-проблему-приведите-доказательства-и-предложите-решение-расскажите-историю-и-призовите-к-действию-объясните-сложное-по-принципу-объясни-будто-мне-5-лет-дайте-краткие-выводы-и-мотивацию-к-работе-с-ними-не-обязательно-использовать-в-презентации-все-шесть-методов-для-хорошей-презентации-будет-достаточно-любых-трех&#34;&gt;Иногда даже сильные идеи теряются в презентациях с хаотичной структурой. Чтобы этого не произошло, расставьте все по местам заранее. Вот несколько способов, с помощью которых вы можете интересно донести основную идею: Начните с небольшой провокации; Укажите на проблему; Приведите доказательства и предложите решение; Расскажите историю и призовите к действию; Объясните сложное по принципу &amp;ldquo;Объясни будто мне 5 лет&amp;rdquo;; Дайте краткие выводы и мотивацию к работе с ними. Не обязательно использовать в презентации все шесть методов, для хорошей презентации будет достаточно любых трех.&lt;/h2&gt;
&lt;h1 id=&#34;как-сделать-крутую-презентацию&#34;&gt;Как сделать крутую презентацию?&lt;/h1&gt;
&lt;h2 id=&#34;теперь-когда-в-аудитории-полный-порядок-с-идеями-и-содержанием-вы-можете-наконец-то-взяться-за-слайды-но-сначала-несколько-советов&#34;&gt;Теперь, когда в аудитории полный порядок с идеями и содержанием, вы можете наконец-то взяться за слайды! Но сначала несколько советов.&lt;/h2&gt;
&lt;h2 id=&#34;не-забывайте-правило-один-слайд---одна-мысль-выбирайте-шрифты-sans-serif-пишите-крупно-используйте-яркие-говорящие-фотографии-выбирайте-классные-шаблоны&#34;&gt;Не забывайте правило &amp;ldquo;один слайд - одна мысль&amp;rdquo;; Выбирайте шрифты sans-serif; Пишите крупно; Используйте яркие говорящие фотографии; Выбирайте классные шаблоны.&lt;/h2&gt;
&lt;h1 id=&#34;как-рассказать-о-презентации&#34;&gt;Как рассказать о презентации?&lt;/h1&gt;
&lt;h2 id=&#34;если-вы-узнали-аудиторию-сформулировали-посыл-и-рассказали-его-простыми-средствами-то-ваша-презентация-уже-круче-чем-все-что-можно-найти-в-интернете-вы-можете-попробовать-пойти-дальше-и-придумать-как-сделать-презентацию-еще-лучше-за-счет-крутой-подачи&#34;&gt;Если вы узнали аудиторию, сформулировали посыл и рассказали его простыми средствами, то ваша презентация уже круче, чем все, что можно найти в Интернете. Вы можете попробовать пойти дальше и придумать, как сделать презентацию еще лучше за счет крутой подачи.&lt;/h2&gt;
&lt;h2 id=&#34;репетируйте-свою-речь-говорите-медленно-старайтесь-уложиться-в-10-минут-используйте-слайды-в-качестве-фона-учитесь-у-лучших&#34;&gt;Репетируйте свою речь; Говорите медленно; Старайтесь уложиться в 10 минут; Используйте слайды в качестве фона; Учитесь у лучших.&lt;/h2&gt;
</description>
    </item>
    
    <item>
      <title>Прошлая неделя</title>
      <link>https://artyombabenko.github.io/ru/post/lastweek3/</link>
      <pubDate>Sat, 21 May 2022 07:13:08 +0300</pubDate>
      <guid>https://artyombabenko.github.io/ru/post/lastweek3/</guid>
      <description>&lt;h1 id=&#34;моя-прошлая-неделя&#34;&gt;Моя прошлая неделя&lt;/h1&gt;
&lt;h2 id=&#34;эта-неделя-получилась-разнообразной-я-много-занимался-учебой-но-и-не-забывал-об-отдыхе-и-развлечениях-у-моей-подруги-был-день-рождения-и-мы-пошли-на-хоррор-квест-мы-получили-незабываемые-эмоции-потом-мы-ели-пиццу-и-гуляли-в-парке-горького-до-ночи&#34;&gt;Эта неделя получилась разнообразной. Я много занимался учебой, но и не забывал об отдыхе и развлечениях. У моей подруги был день рождения, и мы пошли на хоррор-квест. Мы получили незабываемые эмоции. Потом мы ели пиццу и гуляли в парке Горького до ночи.&lt;/h2&gt;
&lt;h1 id=&#34;итоги-недели&#34;&gt;Итоги недели&lt;/h1&gt;
&lt;h2 id=&#34;я-считаю-что-эта-неделя-была-продуктивной-мне-удалось-найти-баланс-между-учебой-и-отдыхом-поэтому-неделя-получилась-отличной&#34;&gt;Я считаю, что эта неделя была продуктивной. Мне удалось найти баланс между учебой и отдыхом, поэтому неделя получилась отличной.&lt;/h2&gt;
</description>
    </item>
    
    <item>
      <title>Markdown</title>
      <link>https://artyombabenko.github.io/ru/post/markdown/</link>
      <pubDate>Sat, 14 May 2022 18:55:24 +0300</pubDate>
      <guid>https://artyombabenko.github.io/ru/post/markdown/</guid>
      <description>&lt;h1 id=&#34;введение&#34;&gt;Введение&lt;/h1&gt;
&lt;h2 id=&#34;markdown---это-язык-разметки-текста-созданный-писателем-и-блоггером-джоном-грубером-он-предназначен-для-создания-красиво-оформленных-текстов-в-обычных-файлах-формата-txt-вам-не-нужны-громоздкие-процессоры-вроде-word-или-pages-чтобы-создавать-документы-с-жирным-или-курсивным-шрифтом-цитатами-ссылками-и-даже-таблицами-достаточно-запомнить-простые-правила-markdown-и-вы-сможете-писать-даже-в-блокноте-хотя-специализированные-редакторы-markdown-конечно-гораздо-удобнее&#34;&gt;Markdown - это язык разметки текста, созданный писателем и блоггером Джоном Грубером. Он предназначен для создания красиво оформленных текстов в обычных файлах формата TXT. Вам не нужны громоздкие процессоры вроде Word или Pages, чтобы создавать документы с жирным или курсивным шрифтом, цитатами, ссылками и даже таблицами. Достаточно запомнить простые правила Markdown, и вы сможете писать даже в &amp;ldquo;Блокноте&amp;rdquo;. Хотя специализированные редакторы Markdown, конечно, гораздо удобнее.&lt;/h2&gt;
&lt;h1 id=&#34;где-можно-использовать-markdown&#34;&gt;Где можно использовать Markdown&lt;/h1&gt;
&lt;h2 id=&#34;примечания-редактор-markdown-с-файловой-панелью-например-atom-или-ia-writer---вполне-достойная-альтернатива-evernote-и-onenote-мы-уже-писали-почему-markdown-хорошо-подходит-для-организации-вашей-базы-заметок&#34;&gt;Примечания: Редактор Markdown с файловой панелью (например, Atom или iA Writer) - вполне достойная альтернатива Evernote и OneNote. Мы уже писали, почему Markdown хорошо подходит для организации вашей базы заметок.&lt;/h2&gt;
&lt;h2 id=&#34;черновики-для-блога-этот-язык-разметки-совместим-с-кучей-онлайн-редакторов-и-блог-платформ-вы-можете-написать-черновик-для-своего-блога-в-markdown-а-затем-опубликовать-его-за-считанные-секунды---все-ссылки-заголовки-и-форматирование-будут-выглядеть-так-как-вы-задумали-это-не-для-того-чтобы-вы-копировали-из-word&#34;&gt;Черновики для блога: Этот язык разметки совместим с кучей онлайн-редакторов и блог-платформ. Вы можете написать черновик для своего блога в Markdown, а затем опубликовать его за считанные секунды - все ссылки, заголовки и форматирование будут выглядеть так, как вы задумали. Это не для того, чтобы вы копировали из Word.&lt;/h2&gt;
&lt;h2 id=&#34;списки-задач-в-редакторах-markdown-очень-легко-создавать-списки-покупок-списки-дел-и-рабочих-заданий-некоторые-гики-используют-обычный-текстовый-файл-todotxt-в-качестве-альтернативы-модным-wunderlist-и-todoist-как-это-сделать-можно-узнать-на-сайте-todotxt-&#34;&gt;Списки задач: В редакторах Markdown очень легко создавать списки покупок, списки дел и рабочих заданий. Некоторые гики используют обычный текстовый файл todo.txt в качестве альтернативы модным Wunderlist и Todoist. Как это сделать, можно узнать на сайте Todo.txt .&lt;/h2&gt;
&lt;h2 id=&#34;мессенджеры-даже-некоторые-мессенджеры-поддерживают-markdown-например-в-telegram-с-его-помощью-можно-применять-жирное-или-курсивное-выделение&#34;&gt;Мессенджеры: Даже некоторые мессенджеры поддерживают Markdown. Например, в Telegram с его помощью можно применять жирное или курсивное выделение.&lt;/h2&gt;
&lt;h1 id=&#34;преимущества-markdown&#34;&gt;Преимущества Markdown&lt;/h1&gt;
&lt;h2 id=&#34;универсальность-документы-написанные-с-использованием-синтаксиса-markdown-представляют-собой-обычные-текстовые-txt-файлы-их-можно-открыть-на-любой-платформе-и-в-любом-редакторе-этим-они-выгодно-отличаются-от-файлов-созданных-в-текстовых-процессорах-пробовали-ли-вы-открыть-документ-из-apple-pages-в-word&#34;&gt;Универсальность: Документы, написанные с использованием синтаксиса Markdown, представляют собой обычные текстовые TXT-файлы. Их можно открыть на любой платформе и в любом редакторе. Этим они выгодно отличаются от файлов, созданных в текстовых процессорах. Пробовали ли вы открыть документ из Apple Pages в Word?&lt;/h2&gt;
&lt;h2 id=&#34;простота-markdown-настолько-прост-что-даже-те-кто-раньше-не-слышал-про-все-эти-ваши-latex-и-html-смогут-освоить-его-за-10-минут-сетки-для-подзаголовков-звездочки-для-выделения-тире-для-списков-проще-и-быть-не-может&#34;&gt;Простота: Markdown настолько прост, что даже те, кто раньше не слышал про все эти ваши Latex и HTML, смогут освоить его за 10 минут. Сетки для подзаголовков, звездочки для выделения, тире для списков. Проще и быть не может.&lt;/h2&gt;
&lt;h2 id=&#34;большой-выбор-инструментов-редактирования-для-работы-с-документами-markdown-очень-и-очень-много-есть-онлайн-мобильные-и-настольные-инструменты-есть-чудовищный-atom-красивые-и-минималистичные-ghostwriter-и-ia-writer-vim-для-гиков-и-ulysses-для-профессиональных-писателей-я-не-хочу-выбирать&#34;&gt;Большой выбор: инструментов редактирования для работы с документами Markdown очень и очень много. Есть онлайн, мобильные и настольные инструменты. Есть чудовищный Atom, красивые и минималистичные ghostwriter и iA Writer, Vim для гиков и Ulysses для профессиональных писателей. Я не хочу выбирать.&lt;/h2&gt;
&lt;h2 id=&#34;конвертируемость-документы-markdown-можно-легко-экспортировать-в-любые-форматы-pdf-doc-odt-при-этом-их-форматирование-остается-неизменным&#34;&gt;Конвертируемость: Документы Markdown можно легко экспортировать в любые форматы: PDF, DOC, ODT. При этом их форматирование остается неизменным.&lt;/h2&gt;
&lt;h1 id=&#34;недостатки-markdown&#34;&gt;Недостатки Markdown&lt;/h1&gt;
&lt;h2 id=&#34;ограниченное-форматирование-поскольку-документы-markdown---это-просто-текстовые-файлы-в-них-нельзя-использовать-красивые-шрифты-в-конце-концов-это-скорее-инструмент-для-написания-черновиков-чем-для-полноценной-верстки&#34;&gt;Ограниченное форматирование: Поскольку документы Markdown - это просто текстовые файлы, в них нельзя использовать красивые шрифты. В конце концов, это скорее инструмент для написания черновиков, чем для полноценной верстки.&lt;/h2&gt;
&lt;h2 id=&#34;строгие-правила-в-markdown-текст-форматируется-с-помощью-служебных-символов-один-лишний-символ--или--и-форматирование-изменится-поэтому-при-наборе-текстов-в-markdown-нужно-быть-внимательным&#34;&gt;Строгие правила: В Markdown текст форматируется с помощью служебных символов. Один лишний символ * или #, и форматирование изменится. Поэтому при наборе текстов в Markdown нужно быть внимательным.&lt;/h2&gt;
&lt;h1 id=&#34;приложения-для-markdown&#34;&gt;Приложения для Markdown&lt;/h1&gt;
&lt;h2 id=&#34;вы-можете-легко-выбрать-свой-любимый-текстовый-редактор-из-нашей-подборки-atom-считается-одним-из-лучших-для-markdown---он-хорош-своей-невероятной-гибкостью-и-универсальностью-он-работает-на-windows-macos-и-linux-и-имеет-огромное-количество-тем-и-расширений-из-него-очень-легко-собрать-редактор-мечты-пользователям-macos-стоит-обратить-внимание-на-красивые-и-удобные-редакторы-ia-writer-write-и-byword&#34;&gt;Вы можете легко выбрать свой любимый текстовый редактор из нашей подборки. Atom считается одним из лучших для Markdown - он хорош своей невероятной гибкостью и универсальностью. Он работает на Windows, macOS и Linux и имеет огромное количество тем и расширений. Из него очень легко собрать редактор мечты. Пользователям macOS стоит обратить внимание на красивые и удобные редакторы iA Writer, Write и Byword.&lt;/h2&gt;
</description>
    </item>
    
    <item>
      <title>Моя прошлая неделя</title>
      <link>https://artyombabenko.github.io/ru/post/last_week2/</link>
      <pubDate>Sat, 14 May 2022 18:53:47 +0300</pubDate>
      <guid>https://artyombabenko.github.io/ru/post/last_week2/</guid>
      <description>&lt;h1 id=&#34;моя-прошлая-неделя&#34;&gt;Моя прошлая неделя&lt;/h1&gt;
&lt;h2 id=&#34;на-этой-неделе-я-сделал-все-что-планировал-я-сделал-все-лабораторные-работы-решил-тесты-сделал-домашнее-задание-по-английскому-языку-кроме-того-я-не-забывал-и-об-отдыхе-мы-с-друзьями-ходили-в-батутный-парк&#34;&gt;На этой неделе я сделал все, что планировал. Я сделал все лабораторные работы, решил тесты, сделал домашнее задание по английскому языку. Кроме того, я не забывал и об отдыхе. Мы с друзьями ходили в батутный парк.&lt;/h2&gt;
&lt;h1 id=&#34;результаты-недели&#34;&gt;Результаты недели&lt;/h1&gt;
&lt;h2 id=&#34;я-считаю-что-эта-неделя-была-продуктивной-я-выполнил-все-задания-и-успел-отдохнуть-расслабиться-и-много-поспать-надеюсь-следующая-неделя-будет-не-менее-продуктивной&#34;&gt;Я считаю, что эта неделя была продуктивной. Я выполнил все задания и успел отдохнуть, расслабиться и много поспать. Надеюсь, следующая неделя будет не менее продуктивной.&lt;/h2&gt;
</description>
    </item>
    
    <item>
      <title>Непрерывная интеграция и непрерывное развертывание (CI/CD)</title>
      <link>https://artyombabenko.github.io/ru/post/tema2/</link>
      <pubDate>Sat, 07 May 2022 07:29:17 +0300</pubDate>
      <guid>https://artyombabenko.github.io/ru/post/tema2/</guid>
      <description>&lt;h1 id=&#34;введение&#34;&gt;Введение&lt;/h1&gt;
&lt;h2 id=&#34;скорость-и-качество-сборки-продукта-являются-основными-конкурентными-преимуществами-в-разработке-программного-обеспечения-поэтому-новая-концепция-cicd---continuous-integration-and-continuous-delivery---непрерывная-интеграция-и-непрерывная-доставка---начала-вытеснять-архаичные-модели-программирования-такие-как-императивная-структурная-или-модульная-она-помогает-минимизировать-ошибки-увеличить-темпы-сборки-и-качество-разрабатываемого-продукта&#34;&gt;Скорость и качество сборки продукта являются основными конкурентными преимуществами в разработке программного обеспечения. Поэтому новая концепция CI/CD - Continuous integration and Continuous delivery - непрерывная интеграция и непрерывная доставка - начала вытеснять архаичные модели программирования, такие как императивная, структурная или модульная. Она помогает минимизировать ошибки, увеличить темпы сборки и качество разрабатываемого продукта.&lt;/h2&gt;
&lt;h1 id=&#34;что-такое-cicd&#34;&gt;Что такое CI/CD&lt;/h1&gt;
&lt;h2 id=&#34;cicd---это-одна-из-практик-devops-которая-подразумевает-непрерывную-интеграцию-и-доставку-этот-набор-принципов-разработан-для-повышения-удобства-частоты-и-надежности-развертывания-программного-обеспечения-или-изменений-продукта-cicd-относится-к-agile-практикам-и-позволяет-разработчикам-уделять-внимание-реализации-бизнес-требований-качеству-кода-и-безопасности-продукта-цели-cicd-обеспечение-последовательного-и-автоматизированного-способа-сборки-упаковки-и-тестирования-продуктов-или-приложений-автоматизация-развертывания-в-различных-средах-минимизация-ошибок-и-проблем&#34;&gt;CI/CD - это одна из практик DevOps, которая подразумевает непрерывную интеграцию и доставку. Этот набор принципов разработан для повышения удобства, частоты и надежности развертывания программного обеспечения или изменений продукта. CI/CD относится к agile-практикам и позволяет разработчикам уделять внимание реализации бизнес-требований, качеству кода и безопасности продукта. Цели CI/CD: обеспечение последовательного и автоматизированного способа сборки, упаковки и тестирования продуктов или приложений; автоматизация развертывания в различных средах; минимизация ошибок и проблем.&lt;/h2&gt;
&lt;h1 id=&#34;принципы-cicd&#34;&gt;Принципы CI/CD&lt;/h1&gt;
&lt;h2 id=&#34;существует-четыре-руководящих-принципа-cicd&#34;&gt;Существует четыре руководящих принципа CI/CD.&lt;/h2&gt;
&lt;h2 id=&#34;1разделение-ответственности-каждый-из-участников-процесса-разделяет-ответственность-за-определенные-этапы-жизненного-цикла-продукта-проектируется-бизнес-логистика-реализуются-сквозные-функции-проводятся-приемочные-испытания-и-организуется-логистика-кода&#34;&gt;1)Разделение ответственности. Каждый из участников процесса разделяет ответственность за определенные этапы жизненного цикла продукта. Проектируется бизнес-логистика, реализуются сквозные функции, проводятся приемочные испытания и организуется логистика кода.&lt;/h2&gt;
&lt;h2 id=&#34;2снижение-рисков-каждая-команда-участвующая-в-разработке-продукта-стремится-снизить-риски---контролируется-правильность-бизнес-логистики-проверяется-пользовательский-опыт-улучшается-хранение-и-обработка-данных-и-т-д&#34;&gt;2)Снижение рисков. Каждая команда, участвующая в разработке продукта, стремится снизить риски - контролируется правильность бизнес-логистики, проверяется пользовательский опыт, улучшается хранение и обработка данных и т. д.&lt;/h2&gt;
&lt;h2 id=&#34;3сокращение-цикла-обратной-связи-разработчик-и-клиент-должны-стремиться-к-увеличению-скорости-внесения-изменений-и-утверждения-правок-сборка-и-тестирование-кода-могут-быть-автоматизированы-а-в-ситуациях-когда-требуется-участие-человека-можно-минимизировать-количество-информационных-посредников&#34;&gt;3)Сокращение цикла обратной связи. Разработчик и клиент должны стремиться к увеличению скорости внесения изменений и утверждения правок. Сборка и тестирование кода могут быть автоматизированы. А в ситуациях, когда требуется участие человека, можно минимизировать количество информационных посредников.&lt;/h2&gt;
&lt;h2 id=&#34;4реализация-среды-разработчики-должны-иметь-общее-рабочее-пространство-с-основной-и-вспомогательной-ветками-для-контроля-версий-и-качества-приемлемости-отказоустойчивости-и-тд&#34;&gt;4)Реализация среды. Разработчики должны иметь общее рабочее пространство с основной и вспомогательной ветками для контроля версий и качества, приемлемости, отказоустойчивости и т.д.&lt;/h2&gt;
&lt;h1 id=&#34;этапы-cicd&#34;&gt;Этапы CI/CD&lt;/h1&gt;
&lt;h2 id=&#34;методология-cicd-предполагает-разделение-процесса-разработки-на-семь-этапов&#34;&gt;Методология CI/CD предполагает разделение процесса разработки на семь этапов.&lt;/h2&gt;
&lt;h2 id=&#34;1написание-кода-разработчики-пишут-код-своего-модуля-и-проводят-ручное-тестирование-после-этого-результат-работы-соединяется-в-основной-ветке-с-текущей-версией-проекта-после-того-как-все-коды-модулей-опубликованы-в-основной-ветке-начинается-второй-этап&#34;&gt;1)Написание кода. Разработчики пишут код своего модуля и проводят ручное тестирование. После этого результат работы соединяется в основной ветке с текущей версией проекта. После того как все коды модулей опубликованы в основной ветке, начинается второй этап.&lt;/h2&gt;
&lt;h2 id=&#34;2сборка-выбранная-система-контроля-версий-инициирует-автоматическую-сборку-и-последующее-тестирование-проекта-триггеры-для-активации-сборки-могут-быть-настроены-самостоятельно-для-автоматизации-сборки-используется-jenkins-или-другой-инструмент&#34;&gt;2)Сборка. Выбранная система контроля версий инициирует автоматическую сборку и последующее тестирование проекта. Триггеры для активации сборки могут быть настроены самостоятельно. Для автоматизации сборки используется Jenkins или другой инструмент.&lt;/h2&gt;
&lt;h2 id=&#34;3ручное-тестирование-после-того-как-система-ci-проверит-работоспособность-тестовой-версии-код-передается-для-ручного-исследования&#34;&gt;3)Ручное тестирование. После того как система CI проверит работоспособность тестовой версии, код передается для ручного исследования.&lt;/h2&gt;
&lt;h2 id=&#34;4релиз-после-ручного-тестирования-в-сборку-вносятся-исправления-далее-происходит-выпуск-версии-кода-для-клиентов&#34;&gt;4)Релиз. После ручного тестирования в сборку вносятся исправления. Далее происходит выпуск версии кода для клиентов.&lt;/h2&gt;
&lt;h2 id=&#34;5развертывание-на-этом-этапе-текущая-рабочая-версия-кода-размещается-на-производственных-серверах-разработчика-клиент-может-взаимодействовать-с-программой-и-изучать-ее-функции&#34;&gt;5)Развертывание. На этом этапе текущая (рабочая) версия кода размещается на производственных серверах разработчика. Клиент может взаимодействовать с программой и изучать ее функции.&lt;/h2&gt;
&lt;h2 id=&#34;6поддержка-и-мониторинг-продукт-начинает-использоваться-конечными-пользователями-в-то-же-время-разработчики-продолжают-его-поддерживать-и-анализировать-работу-пользователей&#34;&gt;6)Поддержка и мониторинг. Продукт начинает использоваться конечными пользователями. В то же время разработчики продолжают его поддерживать и анализировать работу пользователей.&lt;/h2&gt;
&lt;h2 id=&#34;7планирование-на-основе-пользовательского-опыта-разрабатывается-новая-функциональность-и-составляется-план-улучшений-после-этого-разработчик-начинает-писать-код---и-цикл-замыкается&#34;&gt;7)Планирование. На основе пользовательского опыта разрабатывается новая функциональность и составляется план улучшений. После этого разработчик начинает писать код - и цикл замыкается.&lt;/h2&gt;
&lt;h1 id=&#34;плюсы-и-минусы-cicd&#34;&gt;Плюсы и минусы CI/CD&lt;/h1&gt;
&lt;h1 id=&#34;минимальное-время-от-запроса-клиента-до-запуска-в-эксплуатацию-методология-сокращает-время-запуска-обновлений-до-нескольких-дней-в-некоторых-случаях---недель-благодаря-этому-разработчики-получают-возможность-быстрее-тестировать-инновации-и-внедрять-решения-быстрее-конкурентов&#34;&gt;Минимальное время от запроса клиента до запуска в эксплуатацию. Методология сокращает время запуска обновлений до нескольких дней (в некоторых случаях - недель). Благодаря этому разработчики получают возможность быстрее тестировать инновации и внедрять решения быстрее конкурентов.&lt;/h1&gt;
&lt;h2 id=&#34;возможность-проверять-варианты-оперативное-тестирование-и-множество-итераций-помогают-разработчику-быстро-выявить-варианты-не-имеющие-перспектив-даже-на-начальных-этапах&#34;&gt;Возможность проверять варианты. Оперативное тестирование и множество итераций помогают разработчику быстро выявить варианты, не имеющие перспектив, даже на начальных этапах.&lt;/h2&gt;
&lt;h2 id=&#34;качество-результата-проведение-автоматизированного-тестирования-помогает-выявить-ошибки-и-другие-проблемы-на-самых-ранних-стадиях-разработки-при-стандартном-подходе-к-выпуску-релизов-это-сделать-сложно-или-невозможно&#34;&gt;Качество результата. Проведение автоматизированного тестирования помогает выявить ошибки и другие проблемы на самых ранних стадиях разработки. При стандартном подходе к выпуску релизов это сделать сложно или невозможно.&lt;/h2&gt;
&lt;h2 id=&#34;требования-к-опыту-теоретически-все-корпоративные-ит-системы-можно-перевести-на-cicd-но-на-практике-чтобы-получить-результат-необходим-первичный-опыт-работы-с-методологией-а-также-правильная-организация-перестройки-всех-процессов&#34;&gt;Требования к опыту. Теоретически все корпоративные ИТ-системы можно перевести на CI/CD. Но на практике, чтобы получить результат, необходим первичный опыт работы с методологией, а также правильная организация перестройки всех процессов.&lt;/h2&gt;
&lt;h2 id=&#34;сложность-обеспечения-взаимодействия-непрерывное-обновление-и-непрерывная-доставка-должны-быть-четко-скоординированы-что-возможно-только-после-тщательной-настройки-взаимодействия-между-специалистами-всех-уровней&#34;&gt;Сложность обеспечения взаимодействия. Непрерывное обновление и непрерывная доставка должны быть четко скоординированы, что возможно только после тщательной настройки взаимодействия между специалистами всех уровней.&lt;/h2&gt;
&lt;h1 id=&#34;cicd---шумиха-или-необходимость&#34;&gt;CI/CD - шумиха или необходимость?&lt;/h1&gt;
&lt;h2 id=&#34;cicd---одна-из-самых-хиповых-методологий-разработки-по-впервые-идея-ее-внедрения-была-озвучена-в-2006-году-а-уже-в-2008-году-эксперты-высказали-мнение-что-ее-популярность-связана-с-развитием-облачных-сервисов-в-то-же-время-желание-использовать-ее-для-решения-других-задач-объясняется-не-популярностью-а-преимуществами-системы---возможностью-быстро-координировать-и-внедрять-обновления-на-основе-пользовательского-опыта&#34;&gt;CI/CD - одна из самых хиповых методологий разработки ПО. Впервые идея ее внедрения была озвучена в 2006 году, а уже в 2008 году эксперты высказали мнение, что ее популярность связана с развитием облачных сервисов. В то же время желание использовать ее для решения других задач объясняется не популярностью, а преимуществами системы - возможностью быстро координировать и внедрять обновления на основе пользовательского опыта.&lt;/h2&gt;
&lt;h2 id=&#34;в-условиях-жесткой-конкуренции-эта-методология-становится-необходимостью-поскольку-позволяет-значительно-сократить-время-от-разработки-кода-до-выпуска-продукта-cicd-подходит-для-задач-связанных-с-веб-разработкой-omnichannel-решениями-электронной-коммерцией-и-другими-сложными-компонентами-frontend-и-middleware-однако-внедрение-continuous-integration--continuous-delivery-не-всегда-оправдано---например-в-областях-с-редким-обновлением-программного-обеспечения-методология-себя-не-оправдает&#34;&gt;В условиях жесткой конкуренции эта методология становится необходимостью, поскольку позволяет значительно сократить время от разработки кода до выпуска продукта. CI/CD подходит для задач, связанных с веб-разработкой, omnichannel-решениями, электронной коммерцией и другими сложными компонентами frontend и middleware. Однако внедрение Continuous integration &amp;amp; Continuous delivery не всегда оправдано - например, в областях с редким обновлением программного обеспечения методология себя не оправдает.&lt;/h2&gt;
&lt;h1 id=&#34;результат&#34;&gt;Результат&lt;/h1&gt;
&lt;h2 id=&#34;cicd---это-не-просто-методология-но-и-очень-хороший-инструмент-для-команды-разработчиков-чем-дольше-планируется-развивать-и-поддерживать-проект-тем-полезнее-будет-иметь-хорошо-продуманный-cicd-все-ресурсы-и-затраты-на-этот-инструмент-окупаются-на-расстоянии-с-его-помощью-неоспоримо-сокращается-время-выхода-на-рынок-а-также-снижается-вероятность-совершения-ошибки-самое-главное---поддерживать-инструмент-в-хорошем-состоянии&#34;&gt;CI/CD - это не просто методология, но и очень хороший инструмент для команды разработчиков. Чем дольше планируется развивать и поддерживать проект, тем полезнее будет иметь хорошо продуманный CI/CD. Все ресурсы и затраты на этот инструмент окупаются на расстоянии. С его помощью неоспоримо сокращается время выхода на рынок, а также снижается вероятность совершения ошибки. Самое главное - поддерживать инструмент в хорошем состоянии.&lt;/h2&gt;
</description>
    </item>
    
    <item>
      <title>Моя прошлая неделя</title>
      <link>https://artyombabenko.github.io/ru/post/my-last-week1/</link>
      <pubDate>Sat, 07 May 2022 06:36:37 +0300</pubDate>
      <guid>https://artyombabenko.github.io/ru/post/my-last-week1/</guid>
      <description>&lt;h1 id=&#34;моя-последняя-неделя&#34;&gt;Моя последняя неделя&lt;/h1&gt;
&lt;h2 id=&#34;за-эту-неделю-я-сделал-почти-все-что-планировал-я-сделал-все-лабораторные-работы-по-нескольким-предметам-сходил-с-друзьями-в-парк-развлечений-прочитал-новую-детективную-книгу-и-посмотрел-интересный-фильм-птичий-короб-из-всех-запланированных-дел-я-не-смог-изучить-только-английский-язык&#34;&gt;За эту неделю я сделал почти все, что планировал. Я сделал все лабораторные работы по нескольким предметам, сходил с друзьями в парк развлечений, прочитал новую детективную книгу и посмотрел интересный фильм &amp;ldquo;Птичий короб&amp;rdquo;. Из всех запланированных дел я не смог изучить только английский язык.&lt;/h2&gt;
&lt;h1 id=&#34;итоги-недели&#34;&gt;Итоги недели&lt;/h1&gt;
&lt;h2 id=&#34;на-мой-взгляд-эта-неделя-была-довольно-продуктивной-для-меня-у-меня-не-было-времени-сделать-только-одно-запланированное-дело-я-думаю-что-такая-ситуация-произошла-из-за-того-что-я-очень-много-времени-проводил-в-социальных-сетях-чтобы-этого-не-повторилось-я-должен-следить-за-временем-которое-я-трачу-в-социальных-сетях&#34;&gt;На мой взгляд, эта неделя была довольно продуктивной для меня. У меня не было времени сделать только одно запланированное дело. Я думаю, что такая ситуация произошла из-за того, что я очень много времени проводил в социальных сетях. Чтобы этого не повторилось, я должен следить за временем, которое я трачу в социальных сетях.&lt;/h2&gt;
</description>
    </item>
    
    <item>
      <title>Welcome to Wowchemy, the website builder for Hugo</title>
      <link>https://artyombabenko.github.io/ru/post/getting-started/</link>
      <pubDate>Sun, 13 Dec 2020 00:00:00 +0000</pubDate>
      <guid>https://artyombabenko.github.io/ru/post/getting-started/</guid>
      <description>&lt;h2 id=&#34;overview&#34;&gt;Overview&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;The Wowchemy website builder for Hugo, along with its starter templates, is designed for professional creators, educators, and teams/organizations - although it can be used to create any kind of site&lt;/li&gt;
&lt;li&gt;The template can be modified and customised to suit your needs. It&amp;rsquo;s a good platform for anyone looking to take control of their data and online identity whilst having the convenience to start off with a &lt;strong&gt;no-code solution (write in Markdown and customize with YAML parameters)&lt;/strong&gt; and having &lt;strong&gt;flexibility to later add even deeper personalization with HTML and CSS&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;You can work with all your favourite tools and apps with hundreds of plugins and integrations to speed up your workflows, interact with your readers, and much more&lt;/li&gt;
&lt;/ol&gt;
















&lt;figure  id=&#34;figure-the-template-is-mobile-first-with-a-responsive-design-to-ensure-that-your-site-looks-stunning-on-every-device&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;https://raw.githubusercontent.com/wowchemy/wowchemy-hugo-modules/master/academic.png&#34; alt=&#34;The template is mobile first with a responsive design to ensure that your site looks stunning on every device.&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      The template is mobile first with a responsive design to ensure that your site looks stunning on every device.
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;h2 id=&#34;get-started&#34;&gt;Get Started&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;👉 &lt;a href=&#34;https://wowchemy.com/templates/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;strong&gt;Create a new site&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;📚 &lt;a href=&#34;https://wowchemy.com/docs/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;strong&gt;Personalize your site&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;💬 &lt;a href=&#34;https://discord.gg/z8wNYzb&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Chat with the &lt;strong&gt;Wowchemy community&lt;/strong&gt;&lt;/a&gt; or &lt;a href=&#34;https://discourse.gohugo.io&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;strong&gt;Hugo community&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;🐦 Twitter: &lt;a href=&#34;https://twitter.com/wowchemy&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;@wowchemy&lt;/a&gt; &lt;a href=&#34;https://twitter.com/GeorgeCushen&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;@GeorgeCushen&lt;/a&gt; &lt;a href=&#34;https://twitter.com/search?q=%23MadeWithWowchemy&amp;amp;src=typed_query&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;#MadeWithWowchemy&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;💡 &lt;a href=&#34;https://github.com/wowchemy/wowchemy-hugo-modules/issues&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Request a &lt;strong&gt;feature&lt;/strong&gt; or report a &lt;strong&gt;bug&lt;/strong&gt; for &lt;em&gt;Wowchemy&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;⬆️ &lt;strong&gt;Updating Wowchemy?&lt;/strong&gt; View the &lt;a href=&#34;https://wowchemy.com/docs/hugo-tutorials/update/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Update Tutorial&lt;/a&gt; and &lt;a href=&#34;https://wowchemy.com/updates/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Release Notes&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;crowd-funded-open-source-software&#34;&gt;Crowd-funded open-source software&lt;/h2&gt;
&lt;p&gt;To help us develop this template and software sustainably under the MIT license, we ask all individuals and businesses that use it to help support its ongoing maintenance and development via sponsorship.&lt;/p&gt;
&lt;h3 id=&#34;-click-here-to-become-a-sponsor-and-help-support-wowchemys-future-httpswowchemycomplans&#34;&gt;&lt;a href=&#34;https://wowchemy.com/plans/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;❤️ Click here to become a sponsor and help support Wowchemy&amp;rsquo;s future ❤️&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;As a token of appreciation for sponsoring, you can &lt;strong&gt;unlock &lt;a href=&#34;https://wowchemy.com/plans/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;these&lt;/a&gt; awesome rewards and extra features 🦄✨&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&#34;ecosystem&#34;&gt;Ecosystem&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/wowchemy/hugo-academic-cli&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Hugo Academic CLI&lt;/a&gt;:&lt;/strong&gt; Automatically import publications from BibTeX&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;inspiration&#34;&gt;Inspiration&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://academic-demo.netlify.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Check out the latest &lt;strong&gt;demo&lt;/strong&gt;&lt;/a&gt; of what you&amp;rsquo;ll get in less than 10 minutes, or &lt;a href=&#34;https://wowchemy.com/user-stories/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;view the &lt;strong&gt;showcase&lt;/strong&gt;&lt;/a&gt; of personal, project, and business sites.&lt;/p&gt;
&lt;h2 id=&#34;features&#34;&gt;Features&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Page builder&lt;/strong&gt; - Create &lt;em&gt;anything&lt;/em&gt; with &lt;a href=&#34;https://wowchemy.com/docs/page-builder/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;strong&gt;widgets&lt;/strong&gt;&lt;/a&gt; and &lt;a href=&#34;https://wowchemy.com/docs/content/writing-markdown-latex/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;strong&gt;elements&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Edit any type of content&lt;/strong&gt; - Blog posts, publications, talks, slides, projects, and more!&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Create content&lt;/strong&gt; in &lt;a href=&#34;https://wowchemy.com/docs/content/writing-markdown-latex/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;strong&gt;Markdown&lt;/strong&gt;&lt;/a&gt;, &lt;a href=&#34;https://wowchemy.com/docs/import/jupyter/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;strong&gt;Jupyter&lt;/strong&gt;&lt;/a&gt;, or &lt;a href=&#34;https://wowchemy.com/docs/install-locally/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;strong&gt;RStudio&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Plugin System&lt;/strong&gt; - Fully customizable &lt;a href=&#34;https://wowchemy.com/docs/customization/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;strong&gt;color&lt;/strong&gt; and &lt;strong&gt;font themes&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Display Code and Math&lt;/strong&gt; - Code highlighting and &lt;a href=&#34;https://en.wikibooks.org/wiki/LaTeX/Mathematics&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;LaTeX math&lt;/a&gt; supported&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Integrations&lt;/strong&gt; - &lt;a href=&#34;https://analytics.google.com&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Google Analytics&lt;/a&gt;, &lt;a href=&#34;https://disqus.com&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Disqus commenting&lt;/a&gt;, Maps, Contact Forms, and more!&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Beautiful Site&lt;/strong&gt; - Simple and refreshing one page design&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Industry-Leading SEO&lt;/strong&gt; - Help get your website found on search engines and social media&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Media Galleries&lt;/strong&gt; - Display your images and videos with captions in a customizable gallery&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Mobile Friendly&lt;/strong&gt; - Look amazing on every screen with a mobile friendly version of your site&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Multi-language&lt;/strong&gt; - 34+ language packs including English, 中文, and Português&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Multi-user&lt;/strong&gt; - Each author gets their own profile page&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Privacy Pack&lt;/strong&gt; - Assists with GDPR&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Stand Out&lt;/strong&gt; - Bring your site to life with animation, parallax backgrounds, and scroll effects&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;One-Click Deployment&lt;/strong&gt; - No servers. No databases. Only files.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;themes&#34;&gt;Themes&lt;/h2&gt;
&lt;p&gt;Wowchemy and its templates come with &lt;strong&gt;automatic day (light) and night (dark) mode&lt;/strong&gt; built-in. Alternatively, visitors can choose their preferred mode - click the moon icon in the top right of the &lt;a href=&#34;https://academic-demo.netlify.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Demo&lt;/a&gt; to see it in action! Day/night mode can also be disabled by the site admin in &lt;code&gt;params.toml&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://wowchemy.com/docs/customization&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Choose a stunning &lt;strong&gt;theme&lt;/strong&gt; and &lt;strong&gt;font&lt;/strong&gt;&lt;/a&gt; for your site. Themes are fully customizable.&lt;/p&gt;
&lt;h2 id=&#34;license&#34;&gt;License&lt;/h2&gt;
&lt;p&gt;Copyright 2016-present &lt;a href=&#34;https://georgecushen.com&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;George Cushen&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Released under the &lt;a href=&#34;https://github.com/wowchemy/wowchemy-hugo-modules/blob/master/LICENSE.md&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;MIT&lt;/a&gt; license.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Slides</title>
      <link>https://artyombabenko.github.io/ru/slides/example/</link>
      <pubDate>Tue, 05 Feb 2019 00:00:00 +0000</pubDate>
      <guid>https://artyombabenko.github.io/ru/slides/example/</guid>
      <description>&lt;h1 id=&#34;create-slides-in-markdown-with-wowchemy&#34;&gt;Create slides in Markdown with Wowchemy&lt;/h1&gt;
&lt;p&gt;&lt;a href=&#34;https://wowchemy.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Wowchemy&lt;/a&gt; | &lt;a href=&#34;https://owchemy.com/docs/managing-content/#create-slides&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Documentation&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;features&#34;&gt;Features&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Efficiently write slides in Markdown&lt;/li&gt;
&lt;li&gt;3-in-1: Create, Present, and Publish your slides&lt;/li&gt;
&lt;li&gt;Supports speaker notes&lt;/li&gt;
&lt;li&gt;Mobile friendly slides&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;controls&#34;&gt;Controls&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Next: &lt;code&gt;Right Arrow&lt;/code&gt; or &lt;code&gt;Space&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Previous: &lt;code&gt;Left Arrow&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Start: &lt;code&gt;Home&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Finish: &lt;code&gt;End&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Overview: &lt;code&gt;Esc&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Speaker notes: &lt;code&gt;S&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Fullscreen: &lt;code&gt;F&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Zoom: &lt;code&gt;Alt + Click&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/hakimel/reveal.js#pdf-export&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;PDF Export&lt;/a&gt;: &lt;code&gt;E&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;code-highlighting&#34;&gt;Code Highlighting&lt;/h2&gt;
&lt;p&gt;Inline code: &lt;code&gt;variable&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Code block:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;porridge&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;blueberry&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;porridge&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;blueberry&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Eating...&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;h2 id=&#34;math&#34;&gt;Math&lt;/h2&gt;
&lt;p&gt;In-line math: $x + y = z$&lt;/p&gt;
&lt;p&gt;Block math:&lt;/p&gt;
&lt;p&gt;$$
f\left( x \right) = ;\frac{{2\left( {x + 4} \right)\left( {x - 4} \right)}}{{\left( {x + 4} \right)\left( {x + 1} \right)}}
$$&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;fragments&#34;&gt;Fragments&lt;/h2&gt;
&lt;p&gt;Make content appear incrementally&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;{{% fragment %}} One {{% /fragment %}}
{{% fragment %}} **Two** {{% /fragment %}}
{{% fragment %}} Three {{% /fragment %}}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Press &lt;code&gt;Space&lt;/code&gt; to play!&lt;/p&gt;
&lt;span class=&#34;fragment &#34; &gt;
  One
&lt;/span&gt;
&lt;span class=&#34;fragment &#34; &gt;
  &lt;strong&gt;Two&lt;/strong&gt;
&lt;/span&gt;
&lt;span class=&#34;fragment &#34; &gt;
  Three
&lt;/span&gt;
&lt;hr&gt;
&lt;p&gt;A fragment can accept two optional parameters:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;class&lt;/code&gt;: use a custom style (requires definition in custom CSS)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;weight&lt;/code&gt;: sets the order in which a fragment appears&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;speaker-notes&#34;&gt;Speaker Notes&lt;/h2&gt;
&lt;p&gt;Add speaker notes to your presentation&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;{{% speaker_note %}}
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;-&lt;/span&gt; Only the speaker can read these notes
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;-&lt;/span&gt; Press &lt;span class=&#34;sb&#34;&gt;`S`&lt;/span&gt; key to view
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  {{% /speaker_note %}}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Press the &lt;code&gt;S&lt;/code&gt; key to view the speaker notes!&lt;/p&gt;
&lt;aside class=&#34;notes&#34;&gt;
  &lt;ul&gt;
&lt;li&gt;Only the speaker can read these notes&lt;/li&gt;
&lt;li&gt;Press &lt;code&gt;S&lt;/code&gt; key to view&lt;/li&gt;
&lt;/ul&gt;

&lt;/aside&gt;
&lt;hr&gt;
&lt;h2 id=&#34;themes&#34;&gt;Themes&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;black: Black background, white text, blue links (default)&lt;/li&gt;
&lt;li&gt;white: White background, black text, blue links&lt;/li&gt;
&lt;li&gt;league: Gray background, white text, blue links&lt;/li&gt;
&lt;li&gt;beige: Beige background, dark text, brown links&lt;/li&gt;
&lt;li&gt;sky: Blue background, thin dark text, blue links&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;night: Black background, thick white text, orange links&lt;/li&gt;
&lt;li&gt;serif: Cappuccino background, gray text, brown links&lt;/li&gt;
&lt;li&gt;simple: White background, black text, blue links&lt;/li&gt;
&lt;li&gt;solarized: Cream-colored background, dark green text, blue links&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;/media/boards.jpg&#34;
  &gt;

&lt;h2 id=&#34;custom-slide&#34;&gt;Custom Slide&lt;/h2&gt;
&lt;p&gt;Customize the slide style and background&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;{{&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;nt&#34;&gt;slide&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;background-image&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;/media/boards.jpg&amp;#34;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;}}
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;{{&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;nt&#34;&gt;slide&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;background-color&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;#0000FF&amp;#34;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;}}
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;{{&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;nt&#34;&gt;slide&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;class&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;my-style&amp;#34;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;}}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;h2 id=&#34;custom-css-example&#34;&gt;Custom CSS Example&lt;/h2&gt;
&lt;p&gt;Let&amp;rsquo;s make headers navy colored.&lt;/p&gt;
&lt;p&gt;Create &lt;code&gt;assets/css/reveal_custom.css&lt;/code&gt; with:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-css&#34; data-lang=&#34;css&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;reveal&lt;/span&gt; &lt;span class=&#34;nt&#34;&gt;section&lt;/span&gt; &lt;span class=&#34;nt&#34;&gt;h1&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;reveal&lt;/span&gt; &lt;span class=&#34;nt&#34;&gt;section&lt;/span&gt; &lt;span class=&#34;nt&#34;&gt;h2&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;reveal&lt;/span&gt; &lt;span class=&#34;nt&#34;&gt;section&lt;/span&gt; &lt;span class=&#34;nt&#34;&gt;h3&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;color&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;navy&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;h1 id=&#34;questions&#34;&gt;Questions?&lt;/h1&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/wowchemy/wowchemy-hugo-modules/discussions&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Ask&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://wowchemy.com/docs/managing-content/#create-slides&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Documentation&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>An example conference paper</title>
      <link>https://artyombabenko.github.io/ru/publication/example/</link>
      <pubDate>Mon, 01 Jul 2013 00:00:00 +0000</pubDate>
      <guid>https://artyombabenko.github.io/ru/publication/example/</guid>
      <description>&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    Click the &lt;em&gt;Cite&lt;/em&gt; button above to demo the feature to enable visitors to import publication metadata into their reference management software.
  &lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    Create your slides in Markdown - click the &lt;em&gt;Slides&lt;/em&gt; button to check out the example.
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Supplementary notes can be added here, including &lt;a href=&#34;https://wowchemy.com/docs/writing-markdown-latex/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;code, math, and images&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title></title>
      <link>https://artyombabenko.github.io/ru/admin/config.yml</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://artyombabenko.github.io/ru/admin/config.yml</guid>
      <description></description>
    </item>
    
  </channel>
</rss>
